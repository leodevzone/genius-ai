generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model UserApiLimit {
  id        String   @id      @default(cuid())
  userId    String   @unique
  InvitationCode    String  
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserConversation {
  userId      String   // Relación con el usuario
  modelId     String   // Modelo utilizado
  threadId    String   // ID del thread específico
  threadName  String   // Nombre del thread
  summary     String   // Resumen de la conversación
  content     Json     // JSON de la conversación
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@id([userId, modelId, threadId]) // Clave compuesta única
  @@index([userId, modelId, threadId]) // Índice para búsquedas eficientes
}

model UserSubscription {
  id                      String    @id     @default(cuid())
  userId                  String    @unique
  stripeCustomerId        String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId    String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId           String?   @unique @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd  DateTime? @unique @map(name: "stripe_current_period_end")
}

model IaModelTools {
  modelId     String @id @default(cuid()) @map(name: "model_id")
  modelName   String @map(name: "model_name")
  asistantId  String @map(name: "asistant_Id")
  label       String
  icon        String
  color       String
  bgColor     String
  href        String
  isEnabled   Boolean @default(true)
}
model Option {
  id        String @id @default(cuid())
  key       String @unique // La clave única que identifica la opción
  value     String // El valor de la opción, como texto
  autoload  Boolean @default(true) // Indica si la opción debe cargarse automáticamente
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}